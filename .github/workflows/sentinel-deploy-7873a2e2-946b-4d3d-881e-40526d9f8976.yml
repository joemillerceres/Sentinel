name: Deploy Content to sentinel-law-demo [7873a2e2-946b-4d3d-881e-40526d9f8976]
# Note: This workflow will deploy everything in the root directory.
# To deploy content only from a specific path (for example SentinelContent):
#   1. Add the target path to the "paths" property like such
#    paths:
#    - 'SentinelContent/**'
#    - '!.github/workflows/**'
#    - '.github/workflows/sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.yml'
#   2. Append the path to the directory environment variable below
#       directory: '${{ github.workspace }}/SentinelContent'

on: 
  push:
    branches: [ master ]
    paths:
    - 'Detections/AuditLogs/**'
    - 'Detections/AzureActivity/**'
    - 'Detections/AzureDiagnostics/**'
    - 'Detections/CommonSecurityLog/**'
    - 'Detections/DeviceEvents/**'
    - 'Detections/DeviceFileEvents/**'
    - 'Detections/DeviceNetworkEvents/**'
    - 'Detections/DeviceProcessEvents/**'
    - 'Detections/Heartbeat/**'
    - 'Detections/MultipleDataSources/**'
    - 'Detections/OfficeActivity/**'
    - 'Detections/SecurityAlert/**'
    - 'Detections/SecurityEvent/**'
    - 'Detections/SigninLogs/**'
    - 'Detections/Syslog/**'
    - 'Detections/ThreatIntelligenceIndicator/**'
    - 'Detections/WindowsEvent/**'
    - '!.github/workflows/**'  # this filter prevents other workflow changes from triggering this workflow
    - '.github/workflows/sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.yml'

jobs:
  deploy-content1:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/AuditLogs'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content2:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/AzureActivity'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
          
  deploy-content3:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/AzureDiagnostics'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content4:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/CommonSecurityLog'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content5:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/DeviceEvents'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content6:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/DeviceFileEvents'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content7:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/DeviceNetworkEvents'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content8:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/DeviceProcessEvents'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content9:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/Heartbeat'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content10:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/MultipleDataSources'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content11:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/OfficeActivity'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content12:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/SecurityAlert'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content13:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/SecurityEvent'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
  deploy-content14:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/SigninLogs'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content15:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/Syslog'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
          
  deploy-content16:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/ThreatIntelligenceIndicator'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
          
  deploy-content17:
    runs-on: windows-latest
    env:
      resourceGroupName: 'sentinel-demo'
      workspaceName: 'sentinel-law-demo'
      directory: '${{ github.workspace }}/Detections/WindowsEvent'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
      contentTypes: 'AnalyticsRule'
      branch: 'master'
      sourceControlId: '7873a2e2-946b-4d3d-881e-40526d9f8976'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_7873a2e2946b4d3d881e40526d9f8976 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-7873a2e2-946b-4d3d-881e-40526d9f8976.ps1
